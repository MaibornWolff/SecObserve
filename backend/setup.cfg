[flake8]
extend-ignore = I001, I003, I004, I005
max-line-length = 120
exclude = .tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules,venv,unittests/*,*unittests.py

[pycodestyle]
max-line-length = 120
exclude = .tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules,venv,unittests/*,*unittests.py

[isort]
profile = black
known_first_party = application,config, unittests

[mypy]
python_version = 3.10
implicit_optional = True
no_namespace_packages = True
check_untyped_defs = True
ignore_missing_imports = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
plugins = mypy_django_plugin.main, mypy_drf_plugin.main

[mypy.plugins.django-stubs]
django_settings_module = config.settings.dev

[mypy-*.migrations.*]
# Django migrations should not produce any errors:
ignore_errors = True

[pylint.MASTER]
load-plugins=pylint_django
django-settings-module=config.settings.base
ignore-paths=.*/migrations

[pylint.FORMAT]
max-line-length=120

[pylint.MESSAGES CONTROL]
disable=abstract-method,broad-except,too-few-public-methods,missing-docstring,invalid-name,duplicate-code

[pylint.DESIGN]
max-args=6
max-attributes=10
max-locals=20
max-parents=13
max-returns=7

[coverage:run]
include = application/*
omit = *migrations*, *tests*
plugins =
    django_coverage_plugin

[importlinter]
root_package = application

[importlinter:contract:general_layers]
name = General layers
type = layers
layers = 
    application.import_observations | application.metrics
    application.epss | application.rules | application.vex
    application.access_control : application.commons : application.core : application.issue_tracker
ignore_imports =
    application.access_control.services.authorization -> application.*.models
    application.core.api.views -> application.rules.services.rule_engine
    application.core.api.serializers_observation -> application.import_observations.types
    application.core.api.filters -> application.import_observations.types
    application.core.models -> application.import_observations.types

[importlinter:contract:module_layers]
name = Module layers
type = layers
layers =
    (api) | (migrations) | (tasks) | (signals)
    (services)
    (queries)
    (models)
    (types)
containers =
    application.core
    application.commons
    application.issue_tracker
    application.access_control
    application.epss
    application.rules
    application.metrics
    application.vex
ignore_imports =
    application.core.models -> application.core.services.observation
