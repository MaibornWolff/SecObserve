[
    {
        "metadata": {
            "event_code": "aks_cluster_rbac_enabled",
            "product": {
                "name": "Prowler",
                "vendor_name": "Prowler",
                "version": "4.3.5"
            },
            "version": "1.2.0"
        },
        "severity_id": 3,
        "severity": "Medium",
        "status": "Other",
        "status_code": "PASS",
        "status_detail": "RBAC is enabled for cluster 'aks-dev' in subscription 'Test Subscription'.",
        "status_id": 99,
        "unmapped": {
            "check_type": "",
            "related_url": "https://learn.microsoft.com/en-us/azure/aks/azure-ad-rbac?tabs=portal",
            "categories": "",
            "depends_on": "",
            "related_to": "",
            "notes": "",
            "compliance": {}
        },
        "activity_name": "Create",
        "activity_id": 1,
        "finding_info": {
            "created_time": "2024-08-27T10:42:42.507005",
            "desc": "Azure Kubernetes Service (AKS) can be configured to use Azure Active Directory (AD) for user authentication. In this configuration, you sign in to an AKS cluster using an Azure AD authentication token. You can also configure Kubernetes role-based access control (Kubernetes RBAC) to limit access to cluster resources based a user's identity or group membership.",
            "product_uid": "prowler",
            "title": "Ensure AKS RBAC is enabled",
            "uid": "prowler-azure-aks_cluster_rbac_enabled-6c63340e-8a77-447a-9a9f-6c8277e6bc83-westeurope-aks-dev"
        },
        "resources": [
            {
                "cloud_partition": "AzureCloud",
                "region": "westeurope",
                "data": {
                    "details": ""
                },
                "group": {
                    "name": "aks"
                },
                "labels": [],
                "name": "aks-dev",
                "type": "Microsoft.ContainerService/ManagedClusters",
                "uid": "/subscriptions/6c63340e-8a77-447a-9a9f-6c8277e6bc83/resourcegroups/rg-aks/providers/Microsoft.ContainerService/managedClusters/aks-dev"
            }
        ],
        "category_name": "Findings",
        "category_uid": 2,
        "class_name": "DetectionFinding",
        "class_uid": 2004,
        "cloud": {
            "account": {
                "name": "Test Subscription",
                "type": "Azure_AD_Account",
                "type_id": 6,
                "uid": "6c63340e-8a77-447a-9a9f-6c8277e6bc83",
                "labels": []
            },
            "org": {
                "name": "example.com",
                "uid": "aa0bb93c-001d-4d78-8999-6c708a327830"
            },
            "provider": "azure",
            "region": "westeurope"
        },
        "event_time": "2024-08-27T10:42:42.507005",
        "remediation": {
            "desc": "",
            "references": [
                "https://docs.prowler.com/checks/azure/azure-kubernetes-policies/bc_azr_kubernetes_2#terraform",
                "https://www.trendmicro.com/cloudoneconformity/knowledge-base/azure/AKS/enable-role-based-access-control-for-kubernetes-service.html#",
                "https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v2-privileged-access#pa-7-follow-just-enough-administration-least-privilege-principle"
            ]
        },
        "risk_details": "Kubernetes RBAC and AKS help you secure your cluster access and provide only the minimum required permissions to developers and operators.",
        "type_uid": 200401,
        "type_name": "Create"
    },
    {
        "metadata": {
            "event_code": "aks_clusters_public_access_disabled",
            "product": {
                "name": "Prowler",
                "vendor_name": "Prowler",
                "version": "4.3.5"
            },
            "version": "1.2.0"
        },
        "severity_id": 4,
        "severity": "High",
        "status": "New",
        "status_code": "FAIL",
        "status_detail": "Public access to nodes is enabled for cluster 'aks-dev' in subscription 'Test Subscription'",
        "status_id": 1,
        "unmapped": {
            "check_type": "",
            "related_url": "https://learn.microsoft.com/en-us/azure/aks/private-clusters?tabs=azure-portal",
            "categories": "",
            "depends_on": "",
            "related_to": "",
            "notes": "",
            "compliance": {
                "MITRE-ATTACK": [
                    "T1190",
                    "T1530"
                ]
            }
        },
        "activity_name": "Create",
        "activity_id": 1,
        "finding_info": {
            "created_time": "2024-08-27T10:42:42.507005",
            "desc": "Disable access to the Kubernetes API from outside the node network if it is not required.",
            "product_uid": "prowler",
            "title": "Ensure clusters are created with Private Endpoint Enabled and Public Access Disabled",
            "uid": "prowler-azure-aks_clusters_public_access_disabled-6c63340e-8a77-447a-9a9f-6c8277e6bc83-westeurope-aks-dev"
        },
        "resources": [
            {
                "cloud_partition": "AzureCloud",
                "region": "westeurope",
                "data": {
                    "details": ""
                },
                "group": {
                    "name": "aks"
                },
                "labels": [],
                "name": "aks-dev",
                "type": "Microsoft.ContainerService/ManagedClusters",
                "uid": "/subscriptions/6c63340e-8a77-447a-9a9f-6c8277e6bc83/resourcegroups/rg-aks/providers/Microsoft.ContainerService/managedClusters/aks-dev"
            }
        ],
        "category_name": "Findings",
        "category_uid": 2,
        "class_name": "DetectionFinding",
        "class_uid": 2004,
        "cloud": {
            "account": {
                "name": "Test Subscription",
                "type": "Azure_AD_Account",
                "type_id": 6,
                "uid": "6c63340e-8a77-447a-9a9f-6c8277e6bc83",
                "labels": []
            },
            "org": {
                "name": "example.com",
                "uid": "aa0bb93c-001d-4d78-8999-6c708a327830"
            },
            "provider": "azure",
            "region": "westeurope"
        },
        "event_time": "2024-08-27T10:42:42.507005",
        "remediation": {
            "desc": "To use a private endpoint, create a new private endpoint in your virtual network then create a link between your virtual network and a new private DNS zone",
            "references": [
                "az aks update -n <cluster_name> -g <resource_group> --disable-public-fqdn",
                "https://learn.microsoft.com/en-us/azure/aks/access-private-cluster?tabs=azure-cli"
            ]
        },
        "risk_details": "In a private cluster, the master node has two endpoints, a private and public endpoint. The private endpoint is the internal IP address of the master, behind an internal load balancer in the master's wirtual network. Nodes communicate with the master using the private endpoint. The public endpoint enables the Kubernetes API to be accessed from outside the master's virtual network. Although Kubernetes API requires an authorized token to perform sensitive actions, a vulnerability could potentially expose the Kubernetes publically with unrestricted access. Additionally, an attacker may be able to identify the current cluster and Kubernetes API version and determine whether it is vulnerable to an attack. Unless required, disabling public endpoint will help prevent such threats, and require the attacker to be on the master's virtual network to perform any attack on the Kubernetes API.",
        "type_uid": 200401,
        "type_name": "Create"
    },
    {
        "metadata": {
            "event_code": "etcd_unique_ca",
            "product": {
                "name": "Prowler",
                "vendor_name": "Prowler",
                "version": "4.3.5"
            },
            "version": "1.2.0"
        },
        "severity_id": 4,
        "severity": "High",
        "status": "Other",
        "status_code": "MANUAL",
        "status_detail": "Etcd uses a different CA file from the Kubernetes cluster CA in pod etcd-minikube, but verify if the content is the same.",
        "status_id": 99,
        "unmapped": {
            "check_type": "",
            "related_url": "https://etcd.io/docs/latest/op-guide/security/",
            "categories": "encryption",
            "depends_on": "",
            "related_to": "",
            "notes": "This check is particularly important in environments where strict access control to the etcd database is required.",
            "compliance": {
                "CIS-1.8": [
                    "2.7"
                ]
            }
        },
        "activity_name": "Create",
        "activity_id": 1,
        "finding_info": {
            "created_time": "2024-08-27T10:33:23.804078",
            "desc": "This check ensures that etcd uses a unique Certificate Authority (CA) separate from the one used for the overall Kubernetes cluster. This practice enhances the security by restricting access to the etcd database only to clients and peers with certificates issued by the dedicated etcd CA.",
            "product_uid": "prowler",
            "title": "Ensure that a unique Certificate Authority is used for etcd",
            "uid": "prowler-kubernetes-etcd_unique_ca-minikube-namespace: kube-system-etcd-minikube"
        },
        "resources": [
            {
                "region": "namespace: kube-system",
                "data": {
                    "details": ""
                },
                "group": {
                    "name": "etcd"
                },
                "labels": [],
                "name": "etcd-minikube",
                "type": "EtcdService",
                "uid": "327f8146-a784-4cf0-b316-f7d76b5017ef"
            }
        ],
        "category_name": "Findings",
        "category_uid": 2,
        "class_name": "DetectionFinding",
        "class_uid": 2004,
        "container": {
            "name": "etcd-minikube",
            "uid": "327f8146-a784-4cf0-b316-f7d76b5017ef"
        },
        "event_time": "2024-08-27T10:33:23.804078",
        "remediation": {
            "desc": "Ensure etcd uses a unique CA separate from the Kubernetes cluster CA.",
            "references": [
                "--trusted-ca-file=</path/to/etcd-ca-file>",
                "https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#limiting-access-of-etcd-clusters"
            ]
        },
        "risk_details": "Using the same CA for etcd and the Kubernetes cluster can expose etcd to unauthorized access if any certificate issued by the Kubernetes CA is compromised.",
        "type_uid": 200401,
        "type_name": "Create"
    },
    {
        "metadata": {
            "event_code": "apiserver_always_pull_images_plugin",
            "product": {
                "name": "Prowler",
                "vendor_name": "Prowler",
                "version": "4.3.5"
            },
            "version": "1.2.0"
        },
        "severity_id": 3,
        "severity": "Medium",
        "status": "New",
        "status_code": "FAIL",
        "status_detail": "AlwaysPullImages admission control plugin is not set in pod kube-apiserver-minikube.",
        "status_id": 1,
        "unmapped": {
            "check_type": "",
            "related_url": "https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#alwayspullimages",
            "categories": "cluster-security",
            "depends_on": "",
            "related_to": "",
            "notes": "Enabling AlwaysPullImages can increase network and registry load and decrease container startup speed. It may not be suitable for all environments.",
            "compliance": {
                "CIS-1.8": [
                    "1.2.11"
                ]
            }
        },
        "activity_name": "Create",
        "activity_id": 1,
        "finding_info": {
            "created_time": "2024-08-27T10:33:23.804078",
            "desc": "This check verifies that the AlwaysPullImages admission control plugin is enabled in the Kubernetes API server. This plugin ensures that every new pod always pulls the required images, enforcing image access control and preventing the use of possibly outdated or altered images.",
            "product_uid": "prowler",
            "title": "Ensure that the admission control plugin AlwaysPullImages is set",
            "uid": "prowler-kubernetes-apiserver_always_pull_images_plugin-minikube-namespace: kube-system-kube-apiserver-minikube"
        },
        "resources": [
            {
                "region": "namespace: kube-system",
                "data": {
                    "details": ""
                },
                "group": {
                    "name": "apiserver"
                },
                "labels": [],
                "name": "kube-apiserver-minikube",
                "type": "KubernetesAPIServer",
                "uid": "baf5c3ec-9f18-47d5-b0fb-d993767fd3f5"
            }
        ],
        "category_name": "Findings",
        "category_uid": 2,
        "class_name": "DetectionFinding",
        "class_uid": 2004,
        "container": {
            "name": "kube-apiserver-minikube",
            "uid": "baf5c3ec-9f18-47d5-b0fb-d993767fd3f5"
        },
        "event_time": "2024-08-27T10:33:23.804078",
        "remediation": {
            "desc": "Configure the API server to use the AlwaysPullImages admission control plugin to ensure image security and integrity.",
            "references": [
                "https://docs.prowler.com/checks/kubernetes/kubernetes-policy-index/ensure-that-the-admission-control-plugin-alwayspullimages-is-set#kubernetes",
                "--enable-admission-plugins=...,AlwaysPullImages,...",
                "https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers"
            ]
        },
        "risk_details": "Without AlwaysPullImages, once an image is pulled to a node, any pod can use it without any authorization check, potentially leading to security risks.",
        "type_uid": 200401,
        "type_name": "Create"
    }
]