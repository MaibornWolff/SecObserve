from unittests.access_control.api.test_authorization import (
    APITest,
    TestAuthorizationBase,
)


class TestAuthorizationVulnerabilityChecks(TestAuthorizationBase):
    def test_authorization_vulnerability_checks(self):
        expected_data = "{'count': 3, 'next': None, 'previous': None, 'results': [{'id': 1, 'branch_name': '', 'scanner_name': 'scanner_internal_no_branch', 'filename': 'filename_internal_no_branch', 'api_configuration_name': '', 'scanner': 'scanner_internal_no_branch / 1.0.0', 'first_import': '2022-12-15T17:10:35.521000+01:00', 'last_import': '2022-12-15T17:10:35.854000+01:00', 'last_import_observations_new': 1, 'last_import_observations_updated': 2, 'last_import_observations_resolved': 3, 'product': 1, 'branch': None}, {'id': 2, 'branch_name': 'db_branch_internal_dev', 'scanner_name': 'scanner_internal_dev', 'filename': '', 'api_configuration_name': 'api_configuration_internal_dev', 'scanner': 'scanner_internal_dev', 'first_import': '2022-12-16T17:10:35.521000+01:00', 'last_import': '2022-12-16T17:10:35.854000+01:00', 'last_import_observations_new': 4, 'last_import_observations_updated': 5, 'last_import_observations_resolved': 6, 'product': 1, 'branch': 1}, {'id': 3, 'branch_name': 'db_branch_external', 'scanner_name': 'scanner_external', 'filename': 'filename_external', 'api_configuration_name': '', 'scanner': 'scanner_external', 'first_import': '2022-12-17T17:10:35.521000+01:00', 'last_import': '2022-12-17T17:10:35.854000+01:00', 'last_import_observations_new': 7, 'last_import_observations_updated': 8, 'last_import_observations_resolved': 9, 'product': 2, 'branch': 3}]}"
        self._test_api(
            APITest(
                "db_admin",
                "get",
                "/api/vulnerability_checks/",
                None,
                200,
                expected_data,
            )
        )

        expected_data = "{'count': 2, 'next': None, 'previous': None, 'results': [{'id': 1, 'branch_name': '', 'scanner_name': 'scanner_internal_no_branch', 'filename': 'filename_internal_no_branch', 'api_configuration_name': '', 'scanner': 'scanner_internal_no_branch / 1.0.0', 'first_import': '2022-12-15T17:10:35.521000+01:00', 'last_import': '2022-12-15T17:10:35.854000+01:00', 'last_import_observations_new': 1, 'last_import_observations_updated': 2, 'last_import_observations_resolved': 3, 'product': 1, 'branch': None}, {'id': 2, 'branch_name': 'db_branch_internal_dev', 'scanner_name': 'scanner_internal_dev', 'filename': '', 'api_configuration_name': 'api_configuration_internal_dev', 'scanner': 'scanner_internal_dev', 'first_import': '2022-12-16T17:10:35.521000+01:00', 'last_import': '2022-12-16T17:10:35.854000+01:00', 'last_import_observations_new': 4, 'last_import_observations_updated': 5, 'last_import_observations_resolved': 6, 'product': 1, 'branch': 1}]}"
        self._test_api(
            APITest(
                "db_internal_write",
                "get",
                "/api/vulnerability_checks/",
                None,
                200,
                expected_data,
            )
        )

        expected_data = "{'id': 1, 'branch_name': '', 'scanner_name': 'scanner_internal_no_branch', 'filename': 'filename_internal_no_branch', 'api_configuration_name': '', 'scanner': 'scanner_internal_no_branch / 1.0.0', 'first_import': '2022-12-15T17:10:35.521000+01:00', 'last_import': '2022-12-15T17:10:35.854000+01:00', 'last_import_observations_new': 1, 'last_import_observations_updated': 2, 'last_import_observations_resolved': 3, 'product': 1, 'branch': None}"
        self._test_api(
            APITest(
                "db_internal_write",
                "get",
                "/api/vulnerability_checks/1/",
                None,
                200,
                expected_data,
            )
        )

        expected_data = "{'message': 'No Vulnerability_Check matches the given query.'}"
        self._test_api(
            APITest(
                "db_internal_write",
                "get",
                "/api/vulnerability_checks/3/",
                None,
                404,
                expected_data,
            )
        )

        self._test_api(
            APITest(
                "db_internal_write",
                "get",
                "/api/vulnerability_checks/99999/",
                None,
                404,
                expected_data,
            )
        )
